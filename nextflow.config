
manifest {
    mainScript = 'fastq2bam_nextflow_pipeline.nf'
}

//process.executor = 'slurm'

/*process {
    executor = 'slurm'
    memory = 40.GB
    time = '8.h'
    cpus = 1
    clusterOptions = '-A risc_hotel_bank'
    queue = 'hpc_l40_a '
}*/

report {
    overwrite = true
}


conda {

    //useMicromamba = true
    enabled = true
    //path = '/ru-auth/local/home/rjohnson/miniconda3/bin/conda'
    //cacheDir = '/ru-auth/local/home/rjohnson/miniconda3/envs'
}

profiles {
    fastq2bam2_pipeline {
        //conda.enabled = true
        singularity.enabled = true
        //process.executor = 'slurm'
        

        /*manifest {
            mainScript = 'fastq2bam_nextflow_pipeline.nf'
        }
        // i want to see if i can add github support
        providers {
            github {
                user = 'ryan-oblivion'
                password = System.getenv('NXF_GITHUB_ACCESS_TOKEN')

            }
        }*/

        params {

            // I want to add a parameter where the user can choose to run the pipeline in testing mode or not
            // testing mode will take only 3 fastq file from a directory of fastq files that the user has.
            test = false

            // I want to make it so the user can specify if these are paired end reads or single end reads
            PE = false
            SE = false
            
            // adding another parameter for if the user knows the adapter sequence or not
            ada_Seq = false
            
            // giving the user an option to filter the blacklist if they want to 
            BL = false
            
            // params for if we have atac data
            ATAC = false

            // give the user option to use effective genome size when making bedfile using deeptools
            use_effectiveGenomeSize = false

            // this next parameter will be the actual size the user inputs
            num_effectiveGenomeSize = null

            // use this if you are doing a nasa pipeline analysis and want to analyze break density
            calc_break_density = false

            // we need parameters to know if we are running spike in analysis; end-seq(lambda genome), gloe-seq(T7 genome), RICC-seq(yeast gemone)

            spike_in = false


            lambda = false
            //lambda_genome = ''

            t7 = false
            //t7_genome = file('/rugpfs/fs0/risc_lab/store/risc_data/downloaded/T7_Phage/genome/Sequence/WholeGenomeFasta/genome.fa')

            yeast = false
            //yeast_genome = ''

            // make a parameter that will take a single directory of peak files

            give_peak_files = null

            // this new parameter should be for anyone that has alignment bam files and want to check it's depth by seeing how many reads intersect with a given set of already created peak files

            depth_intersection = false

            gloe_seq = false
            end_seq = false


            // user should specify if they want to align reads using bwa_meth for bisulfate sequencing data that looks at methylation
            bisulfate_methylation = false  

        }
        process {
            // i can add params that say Start_w_fastq and one that says Start_w_bams; then add the if then logic to the main nf script workflow
            // params.Start_w_fastq = fasle
            // params.Start_w_bams = false

        
            
            /*
            withName: download_genomes {
                memory = 50.GB
                time = '1.h'

            }*/ 
            executor = 'slurm'
            clusterOptions = '-A risc_hotel_bank'
            queue = 'hpc_a10_a'
            

            withName: fastp_SE_adapter_known {
                
                memory = 50.GB
                cpus = 20
                time = '1.h'
            }
            withName: fastp_SE {
                
                memory = 60.GB
                cpus = 20
                time = '1.h'
            }
            withName: fastqc_SE {
                
                memory = 50.GB
                time = '1.h'
            }
            
            
            withName: multiqc_SE {
                
                memory = 50.GB
                time = '1.h'
            }

            withName: bwa_index_genome {
                
                memory = 80.GB
                time = '1.h'
                cpus = 20
            }

            withName: bwa_align_SE {
                
                memory = 100.GB
                time = '8.h'
                cpus = 20

            }

            withName: samtools_sort {
                
                memory = 20.GB
                time = '1.h'
                cpus = 10
            }
            
            withName: deeptools_make_bed {
                
                time = '1.h'
                memory = 10.GB
                cpus = 10
            }

            withName: bedtools_filt_blacklist {
                
                time = '1.h'
                memory = 10.GB
                cpus = 10
            }
 
            withName: samtools_bl_index {
                
                time = '1.h'
                memory = 10.GB
                cpus = 10
            }

            withName: fastp_PE {
                
                time = '1.h'
                memory = 60.GB
                cpus = 20
            }
            
            withName: fastqc_PE {
                
                time = '1.h'
                memory = 50.GB
                cpus = 2
            }

            withName: multiqc_PE {
                
                time = '1.h'
                memory = 20.GB
                cpus = 2
            }


        
            withName: bwa_PE_aln{
                
                time = '8.h'
                memory = 100.GB
                cpus = 20
            }

            withName: multiqc_bam_stats {
                
                time = '1.h'
                memory = 20.GB
                cpus = 2
            }

            withName: deeptools_aln_shift {
                
                time = '1.h'
                memory = 20.GB
                cpus = 12
            }

            withName: breakDensityWrapper_process {
                
                time = '24.h'
                memory = 200.GB
                cpus = 6
            }

            withLabel: spike_in_big_resoruces {

                time = '8.h'
                memory = 80.GB
                cpus = 20
            }

            withLabel: spike_in_small_resources {

                time = '1.h'
                memory = 30.GB
                cpus = 15

            }

            withLabel: normal_big_resources {
                memory = 80.GB
                time = '5.h'
                cpus = 20

            }
            withLabel: normal_small_resources {
                memory = 20.GB
                time = '1.h'
                cpus = 15

            }

            withLabel: super_small_resources {
                memory = 20.GB
                time = '1.h'
                cpus = 2
            }

            /*withName: fastp_PE {
                memory = 50.GB
                time = '1.h'
            }*/

        }

    }
    bed2heatmap {

        singularity.enabled = true

        params {

            // I want to add a parameter where the user can choose to run the pipeline in testing mode or not
            // testing mode will take only 3 fastq file from a directory of fastq files that the user has.
            test = false

            // I want to make it so the user can specify if these are paired end reads or single end reads
            PE = false
            SE = false
            
            // adding another parameter for if the user knows the adapter sequence or not
            ada_Seq = false
            
            // giving the user an option to filter the blacklist if they want to 
            BL = false
            
            // params for if we have atac data
            ATAC = false

            // give the user option to use effective genome size when making bedfile using deeptools
            use_effectiveGenomeSize = false

            // this next parameter will be the actual size the user inputs
            num_effectiveGenomeSize = null

            // use this if you are doing a nasa pipeline analysis and want to analyze break density
            calc_break_density = false

            // we need parameters to know if we are running spike in analysis; end-seq(lambda genome), gloe-seq(T7 genome), RICC-seq(yeast gemone)

            spike_in = false


            lambda = false
            //lambda_genome = ''

            t7 = false
            //t7_genome = file('/rugpfs/fs0/risc_lab/store/risc_data/downloaded/T7_Phage/genome/Sequence/WholeGenomeFasta/genome.fa')

            yeast = false
            //yeast_genome = ''

            // make a parameter that will take a single directory of peak files

            give_peak_files = null

            // this new parameter should be for anyone that has alignment bam files and want to check it's depth by seeing how many reads intersect with a given set of already created peak files

            depth_intersection = false

            gloe_seq = false
            end_seq = false

        }
        
        
        
        process {

            executor = 'slurm'
            clusterOptions = '-A risc_hotel_bank'
            queue = 'hpc_a10_a'


            withLabel: normal_big_resources {
                memory = 80.GB
                time = '5.h'
                cpus = 20

            }
            withLabel: normal_small_resources {
                memory = 20.GB
                time = '1.h'
                cpus = 15

            }

            withLabel: super_small_resources {
                memory = 20.GB
                time = '1.h'
                cpus = 2
            }


        }


    }
}