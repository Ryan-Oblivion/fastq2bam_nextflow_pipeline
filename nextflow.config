
profiles {
    nasa_pipeline {
        conda.enabled = true
        singularity.enabled = true
        process.executor = 'slurm'
        

        /*manifest {
            mainScript = 'nasa_pipeline.nf'
        }
        // i want to see if i can add github support
        providers {
            github {
                user = 'ryan-oblivion'
                password = System.getenv('NXF_GITHUB_ACCESS_TOKEN')

            }
        }*/


        process {
            // i can add params that say Start_w_fastq and one that says Start_w_bams; then add the if then logic to the main nf script workflow
            // params.Start_w_fastq = fasle
            // params.Start_w_bams = false

            // I want to make it so the user can specify if these are paired end reads or single end reads
            params.PE = false
            params.SE = false
            
            // adding another parameter for if the user knows the adapter sequence or not
            params.ada_Seq = false
            
            // giving the user an option to filter the blacklist if they want to 
            params.BL = false
            /*
            withName: download_genomes {
                memory = 50.GB
                time = '1.h'

            }*/ 

            withName: fastp_SE_adapter_known {
                memory = 50.GB
                time = '1.h'
            }
            withName: fastp_SE {
                memory = 50.GB
                time = '1.h'
            }
            withName: fastqc_SE {
                memory = 50.GB
                time = '1.h'
            }
            
            
            withName: multiqc_SE {
                memory = 50.GB
                time = '1.h'
            }

            withName: bwa_index_genome {
                memory = 20.GB
                time = '1.h'
                cpus = 20
            }

            withName: bwa_align_SE {
                memory = 20.GB
                time = '5.h'
                cpus = 20

            }

            withName: samtools_sort {
                memory = 8.GB
                time = '1.h'
                cpus = 10
            }
            
            withName: deeptools_make_bed {
                time = '1.h'
                memory = 10.GB
                cpus = 10
            }

            withName: bedtools_filt_blacklist {
                time = '1.h'
                memory = 10.GB
                cpus = 10
            }
 
            withName: samtools_bl_index {
                time = '1.h'
                memory = 10.GB
                cpus = 10
            }

            withName: fastp_PE {
                time = '1.h'
                memory = 20.GB
                cpus = 15
            }
            
            withName: fastqc_PE {
                time = '1.h'
                memory = 20.GB
                cpus = 2
            }

            withName: multiqc_PE {
                time = '1.h'
                memory = 20.GB
                cpus = 2
            }


        
            withName: bwa_PE_aln{
                time = '8.h'
                memory = 20.GB
                cpus = 20
            }

            /*withName: fastp_PE {
                memory = 50.GB
                time = '1.h'
            }*/

        }

    }
}